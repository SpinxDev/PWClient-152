	public:
		int retcode;
		int cash;
		int money;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_STOCKTRANSACTION_RE };
	public:
		StockTransaction_Re() { type = PROTOCOL_STOCKTRANSACTION_RE; }
		StockTransaction_Re(void*) : Protocol(PROTOCOL_STOCKTRANSACTION_RE) { }
		StockTransaction_Re (int l_retcode,int l_cash = 0,int l_money = 0,
			unsigned int l_localsid = 0)
			 : retcode(l_retcode),cash(l_cash),money(l_money),
			localsid(l_localsid)
		{
			type = PROTOCOL_STOCKTRANSACTION_RE;
		}

		StockTransaction_Re(const StockTransaction_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),cash(rhs.cash),money(rhs.money),
			localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new StockTransaction_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << cash;
			os << money;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> cash;
			os >> money;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
