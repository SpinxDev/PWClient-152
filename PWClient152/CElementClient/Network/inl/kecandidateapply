	public:
		int roleid;
		unsigned int item_id;
		int item_num;
		Octets syncdata;
		enum { PROTOCOL_TYPE = PROTOCOL_KECANDIDATEAPPLY };
	public:
		KECandidateApply() { type = PROTOCOL_KECANDIDATEAPPLY; }
		KECandidateApply(void*) : Protocol(PROTOCOL_KECANDIDATEAPPLY) { }
		KECandidateApply (int l_roleid,unsigned int l_item_id,int l_item_num,
			const Octets& l_syncdata = Octets())
			 : roleid(l_roleid),item_id(l_item_id),item_num(l_item_num)
			,syncdata(l_syncdata)
		{
			type = PROTOCOL_KECANDIDATEAPPLY;
		}

		KECandidateApply(const KECandidateApply &rhs)
			: Protocol(rhs),roleid(rhs.roleid),item_id(rhs.item_id),item_num(rhs.item_num)
			,syncdata(rhs.syncdata) { }

		GNET::Protocol *Clone() const { return new KECandidateApply(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << item_id;
			os << item_num;
			os << syncdata;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> item_id;
			os >> item_num;
			os >> syncdata;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 131072; }
