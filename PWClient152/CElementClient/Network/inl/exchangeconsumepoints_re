	public:
		int retcode;
		int roleid;
		int bonus_add;
		int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_EXCHANGECONSUMEPOINTS_RE };
	public:
		ExchangeConsumePoints_Re() { type = PROTOCOL_EXCHANGECONSUMEPOINTS_RE; }
		ExchangeConsumePoints_Re(void*) : Protocol(PROTOCOL_EXCHANGECONSUMEPOINTS_RE) { }
		ExchangeConsumePoints_Re (int l_retcode,int l_roleid,int l_bonus_add = 0,
			int l_localsid = 0)
			 : retcode(l_retcode),roleid(l_roleid),bonus_add(l_bonus_add)
			,localsid(l_localsid)
		{
			type = PROTOCOL_EXCHANGECONSUMEPOINTS_RE;
		}

		ExchangeConsumePoints_Re(const ExchangeConsumePoints_Re &rhs)
			: Protocol(rhs),retcode(rhs.retcode),roleid(rhs.roleid),bonus_add(rhs.bonus_add)
			,localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new ExchangeConsumePoints_Re(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << retcode;
			os << roleid;
			os << bonus_add;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> retcode;
			os >> roleid;
			os >> bonus_add;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 32; }
