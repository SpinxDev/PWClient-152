	public:
		__int64 tid;
		Octets encrypted_item;
		Octets checksum;
		enum { PROTOCOL_TYPE = PROTOCOL_GETENCRYPTEDITEMDESC };
	public:
		GetEncryptedItemDesc() { type = PROTOCOL_GETENCRYPTEDITEMDESC; }
		GetEncryptedItemDesc(void*) : Protocol(PROTOCOL_GETENCRYPTEDITEMDESC) { }
		GetEncryptedItemDesc (__int64 l_tid,const Octets& l_encrypted_item,const Octets& l_checksum)
			 : tid(l_tid),encrypted_item(l_encrypted_item),checksum(l_checksum)
		{
			type = PROTOCOL_GETENCRYPTEDITEMDESC;
		}

		GetEncryptedItemDesc(const GetEncryptedItemDesc &rhs)
			: Protocol(rhs),tid(rhs.tid),encrypted_item(rhs.encrypted_item),checksum(rhs.checksum) { }

		GNET::Protocol *Clone() const { return new GetEncryptedItemDesc(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << tid;
			os << encrypted_item;
			os << checksum;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> tid;
			os >> encrypted_item;
			os >> checksum;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 4096; }
