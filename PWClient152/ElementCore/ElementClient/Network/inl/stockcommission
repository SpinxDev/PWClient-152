	public:
		int roleid;
		char isbuy;
		int price;
		int volume;
		unsigned int localsid;
		enum { PROTOCOL_TYPE = PROTOCOL_STOCKCOMMISSION };
	public:
		StockCommission() { type = PROTOCOL_STOCKCOMMISSION; }
		StockCommission(void*) : Protocol(PROTOCOL_STOCKCOMMISSION) { }
		StockCommission (int l_roleid,char l_isbuy = 0,int l_price = 0,
			int l_volume = 0,unsigned int l_localsid = 0)
			 : roleid(l_roleid),isbuy(l_isbuy),price(l_price),
			volume(l_volume),localsid(l_localsid)
		{
			type = PROTOCOL_STOCKCOMMISSION;
		}

		StockCommission(const StockCommission &rhs)
			: Protocol(rhs),roleid(rhs.roleid),isbuy(rhs.isbuy),price(rhs.price),
			volume(rhs.volume),localsid(rhs.localsid) { }

		GNET::Protocol *Clone() const { return new StockCommission(*this); }

		OctetsStream& marshal(OctetsStream & os) const
		{
			os << roleid;
			os << isbuy;
			os << price;
			os << volume;
			os << localsid;
			return os;
		}

		const OctetsStream& unmarshal(const OctetsStream &os)
		{
			os >> roleid;
			os >> isbuy;
			os >> price;
			os >> volume;
			os >> localsid;
			return os;
		}

		int PriorPolicy( ) const { return 1; }

		bool SizePolicy(size_t size) const { return size <= 64; }
