; DESCRIPTION:
; Vertex shader used to render litmodel refracted under the water with 
; depth based fog
; this shader does below works:
; # vertex transform
; # output fog according to the height difference with water surface

vs.1.1

;------------------------------------------------------------------------------
; v0 	  = position in world space
; v1	  = diffuse
; v2 	  = texture coordinates
;------------------------------------------------------------------------------
dcl_position v0
dcl_color v1
dcl_texcoord v2

;------------------------------------------------------------------------------
; Constants specified by the app;
; c0      = (1.0, WaterHeight, fogDensity, fogOffset)
; c1-c4	  = view matrix * projection matrix
; c5	  = eye position
;------------------------------------------------------------------------------

;------------------------------------------------------------------------------
; oPos	  = Output position
; oD0	  = Diffuse
; oT0	  = texture coord
; oFog    = fog value
;------------------------------------------------------------------------------

; Transform position from world space to cuboid space and output it
mov r0, v0
m4x4 oPos, r0, c1

; output diffuse color
mov oD0, v1
mov oT0, v2

; calculate fog
sub r0, c5, v0
dp3 r0.w, r0, r0
rsq r0.w, r0.w
mul r0.xyz, r0, r0.w
rcp r0.y, r0.y

sub r1.y, c0.y, v0.y
sge r1.x, c0.y, v0.y

// if v0.y is greater then c0.y, then we set water depth to zero at this point
mul r1.y, r1.y, r1.x		

mul r1.z, r1.y, r0.y
mul r1.z, r1.z, c0.z		// density * distance
;mul r1.x, r1.z, r1.z		// power of 2
;mul r1.z, r1.x, r1.z		// power of 3
exp r1.z, r1.z			
rcp r1.z, r1.z
add oFog, r1.z, c0.w

