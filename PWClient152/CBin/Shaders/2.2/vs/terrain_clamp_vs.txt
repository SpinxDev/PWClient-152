; DESCRIPTION:
; Vertex shader used to render terrain for water refract
; this shader does below works:
; # vertex transform

vs.1.1

;------------------------------------------------------------------------------
; v0 	  = position in world space
; v1	  = normal
; v2~v5	  = texture coordinates 0, 1, 2 and 3
;------------------------------------------------------------------------------

;------------------------------------------------------------------------------
; Constants specified by the app;
; c0      = (1.0, WaterHeight, dir, 0.0f)
; c1-c4	  = view matrix * projection matrix
; c5	  = tex coord index for oT0
; c6	  = tex coord index for oT1
; c7	  = tex coord index for oT2
; c8-c11  = texture layer 0 transform matrix
; c12-c15 = texture layer 1 transform matrix
; c16-c19 = texture layer 2 transform matrix
;------------------------------------------------------------------------------

;------------------------------------------------------------------------------
; oPos	  = Output position
; oD0	  = Diffuse
; oT0	  = ray travel distance under the water
; oFog    = fog value
;------------------------------------------------------------------------------

sub r1.y, c0.y, v0.y
mul r1.x, r1.y, c0.z
slt r1.x, r1.x, c0.w

; Transform position on the water surface from world space to cuboid space and output it
mov r0, v0
mad r0.y, r1.x, r1.y, v0.y
m4x4 oPos, r0, c1

mov oD0, c0.x

; Calculate texture coordinates
mul r0.xy, v2, c5.x
mad r0.xy, v3, c5.y, r0
mad r0.xy, v4, c5.z, r0
m3x2 oT0, r0, c8

mul r0.xy, v2, c6.x
mad r0.xy, v3, c6.y, r0
mad r0.xy, v4, c6.z, r0
m3x2 oT1, r0, c12

mul r0.xy, v2, c7.x
mad r0.xy, v3, c7.y, r0
mad r0.xy, v4, c7.z, r0
m3x2 oT2, r0, c16

// output mask layer texture coord directly
mov oT3, v5
mov oT4, v5

; set no fog
mov oFog, c0.x




